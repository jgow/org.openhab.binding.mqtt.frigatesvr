Number fgDrivewayCameraFPS "Configured FPS for this camera [%.2f]"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCameraFPS" }
Number fgDrivewayCameraProcessFPS "Actual processing FPS for this camera [%.2f]"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCameraProcessFPS" }
Number fgDrivewayCameraSkippedFPS "Skipped FPS for this camera [%.2f]"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCameraSkippedFPS" }
Number fgDrivewayCameraDetectionFPS "Detection FPS for this camera [%.2f]"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCameraDetectionFPS" }
String fgDrivewayEventID "Current EventId"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgEventID" }
Switch fgDrivewayDetectionState "Turn object detection on/off"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgDetectionState" }
Switch fgDrivewayRecordingState "Turn recording on/off"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgRecordingState" }
Switch fgDrivewaySnapshotState "Turn snapshots on/off"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgSnapshotState" }
Switch fgDrivewayMotionState "Turn snapshots on/off"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgMotionState" }
Switch fgDrivewayContrastState "Turn 'improve contrast' on/off"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgContrastState" }
Number fgDrivewayMotionThreshold "Read/set motion detection threshold"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgMotionThreshold" }
Number fgDrivewayMotionContourArea "Read/set motion contour area"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgMotionContourArea" }
Contact fgDrivewayMotionDetected "Motion detected"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgMotionDetected" }
String fgDrivewayStreamURL "URL to local camera streams for UIs (if enabled)"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgStreamURL" }
String fgDrivewayLastSnapshotObject "Type of object detected in last snapshot"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgLastSnapshotObject" }
Image fgDrivewayLastSnapshot "Snapshot of last detected object"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgLastSnapshot" }
String fgDrivewayCamActionResult "CameraAction JSON result"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCamActionResult" }
Image fgDrivewayLastProcessedFrame "If the return from a Camera ThingAction is an image, it will appear here"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgLastProcessedFrame" }
String fgDrivewayEventJSON "Event JSON"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgEventJSON" }
String fgDrivewayEventType "Current event type ('new', 'update' or 'end')"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgEventType" }
String fgDrivewayEventClipURL "URL to clip of current event"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgEventClipURL" }

// Current event items
DateTime fgDrivewayCurFrameTime "Current event: Frame time to prior event"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurFrameTime" }
DateTime fgDrivewayCurSnapshotTime "Current event: Time of snapshot"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurSnapshotTime" }
String fgDrivewayCurLabel "Current event: Detected entity"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurLabel" }
String fgDrivewayCurSubLabel "Current event: Sublabel of detected entity"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurSubLabel" }
Number fgDrivewayCurTopScore "Current event: Top score [%.2f]"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurTopScore" }
Contact fgDrivewayCurFalsePositive "Current event: was this a false positive?"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurFalsePositive" }
DateTime fgDrivewayCurStartTime "Current event: Event start time"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurStartTime" }
DateTime fgDrivewayCurEndTime "Current event: Event end time"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurEndTime" }
Number fgDrivewayCurScore "Current event: Score [%.2f]"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurScore" }
String fgDrivewayCurBox "Current event: Detection box coords (array)"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurBox" }
String fgDrivewayCurArea "Current event: Detection box area (array) [%d]"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurArea" }
Number fgDrivewayCurRatio "Current event: Detected ratio"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurRatio" }
String fgDrivewayCurRegion "Current event: Detected regions"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurRegion" }
String fgDrivewayCurCurrentZone "Current event: Detected zones (array)"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurCurrentZone" }
String fgDrivewayCurEnteredZone "Current event: Entered zones (array)"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurEnteredZone" }
Contact fgDrivewayCurHasSnapshot "Current event: is a snapshot available?"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurHasSnapshot" }
Contact fgDrivewayCurHasClip "Current event: is a clip available?"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurHasClip" }
Contact fgDrivewayCurStationary "Current event: is object stationary?"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurStationary" }
Number fgDrivewayCurMotionlessCount "Current event: Number of motionless frames"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurMotionlessCount" }
Number fgDrivewayCurPositionChanges "Current event: Number of position changes"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgCurPositionChanges" }

// Previous event items
DateTime fgDrivewayPrevFrameTime "Prior event: Frame time to prior event"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevFrameTime" }
DateTime fgDrivewayPrevSnapshotTime "Prior event: Time of snapshot"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevSnapshotTime" }
String fgDrivewayPrevLabel "Prior event: Detected entity"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevLabel" }
String fgDrivewayPrevSubLabel "Prior event: Sublabel of detected entity"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevSubLabel" }
Number fgDrivewayPrevTopScore "Prior event: Top score [%.2f]"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevTopScore" }
Contact fgDrivewayPrevFalsePositive "Prior event: was this a false positive?"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevFalsePositive" }
DateTime fgDrivewayPrevStartTime "Prior event: Event start time"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevStartTime" }
DateTime fgDrivewayPrevEndTime "Prior event: Event end time"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevEndTime" }
Number fgDrivewayPrevScore "Prior event: Score [%.2f]"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevScore" }
String fgDrivewayPrevBox "Prior event: Detection box coords (array)"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevBox" }
String fgDrivewayPrevArea "Prior event: Detection box area (array)"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevArea" }
Number fgDrivewayPrevRatio "Prior event: Detected ratio"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevRatio" }
String fgDrivewayPrevRegion "Prior event: Detected regions"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevRegion" }
String fgDrivewayPrevCurrentZone "Prior event: Detected zones (array)"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevCurrentZone" }
String fgDrivewayPrevEnteredZone "Prior event: Entered zones (array)"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevEnteredZone" }
Contact fgDrivewayPrevHasSnapshot "Prior event: is a snapshot available?"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevHasSnapshot" }
Contact fgDrivewayPrevHasClip "Prior event: is a clip available?"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevHasClip" }
Contact fgDrivewayPrevStationary "Prior event: is object stationary?"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevStationary" }
Number fgDrivewayPrevMotionlessCount "Prior event: Number of motionless frames"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevMotionlessCount" }
Number fgDrivewayPrevPositionChanges "Prior event: Number of position changes"  {channel="mqtt:frigateCamera:PiMqttBroker:drivewayCamera:fgPrevPositionChanges" }
